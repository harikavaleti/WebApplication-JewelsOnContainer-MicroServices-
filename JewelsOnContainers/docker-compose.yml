version: '3.4'

networks:


  frontend:
  backend:

services:
  catalogservice:
    image: jewels/catalogserviceapi 
    build:
      context: .\ProductCatalogApi
      dockerfile: Dockerfile
    environment:
      DatabaseServer: mssqlServer
      DatabaseName: CatalogDb
      DatabaseUser: sa
      DatabasePassword: ProductApi(!)
      ExternalCatalogBaseUrl: http://localhost:8800
    ports:
      - "8800:80"
    container_name: jewelscatalogapi
    networks:
      - backend
      - frontend
    depends_on:
      - mssqlserver

  cart:
    build: 
      context: .\CartApi
      dockerfile: Dockerfile
    image: jewels/cartapi
    environment:
      IdentityUrl: http://192.168.0.10:6700
      ConnectionString: basket.data
    ports:
      - "8801:80"
    container_name: cartapi
    networks:
      - frontend
      - backend
    depends_on:
      - tokenserver
      - basket.data
      - rabbitmq

  order:
    build:
      context: .\OrderApi
      dockerfile: Dockerfile
    image: jewels/orderapi
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      IdentityUrl: http://192.168.0.10:6700
      DatabaseServer: mssqlserver
      DatabaseServerName: OrdersDb
      DatabaseUser: sa
      DatabasePassword: ProductApi(!)
    ports:
      - "8802:80"
    container_name: orderapi
    networks:
      - backend
      - frontend
    depends_on:
      - mssqlserver
      - tokenserver
      - rabbitmq
        

  mssqlserver:
    image: "microsoft/mssql-server-linux:latest"
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: ProductApi(!)
    ports:
      - "1448:1433"
    container_name: jewelssqlserver
    networks:
      - backend

  tokenserver:
    build:
      context: .\TokenServiceApi
      dockerfile: Dockerfile
    image: jewels/tokenapi
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      MvcClient: http://localhost:5210
    ports:  
      - "6700:80"
    container_name: tokenserviceapi
    networks:
      - backend
      - frontend
    depends_on:
      - mssqlserver

  webmvc:
    build: 
      context: .\webmvc
      dockerfile: Dockerfile
    image: jewels/webmvc
    container_name: webshop
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CatalogUrl: http://catalogservice
      IdentityUrl: http://192.168.0.10:6700
      CallBackUrl: http://localhost:5210
      CartUrl: http://cart
      OrderUrl: http://order
      StripePublicKey: pk_test_TsdrydjbF4Hoe46r6jByS7Ye00DmKSK91L
      StripePrivateKey: sk_test_UnsaIsl4scWFMgShOGBEceec00yd02ofrX
    ports:
      - "5210:80"
    networks:
      - frontend
    depends_on:
      - catalogservice
      - cart
      - tokenserver
      - order

  basket.data:
    image: redis
    container_name: basketdata
    ports:
      - "6210:6379"
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: myrabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
      - "5671:5671"
    volumes:
      - ~/rabbitmq:/var/lib/rabbitmq/mnesia   
    networks:
      - backend 